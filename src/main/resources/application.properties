# =======================================
# SERVER CONFIGURATION
# =======================================
# The port your application will run on.
server.port=8080


# =======================================
# DATABASE CONFIGURATION
# =======================================
# PostgreSQL configuration - Render DATABASE_URL will be parsed automatically
# For local development, use the fallback values
spring.datasource.url=${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/expense_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate settings for PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Additional PostgreSQL optimizations
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


# =======================================
# EMAIL CONFIGURATION
# =======================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
# IMPORTANT: Your actual Gmail address.
spring.mail.username=zenosvalkyre@gmail.com
# IMPORTANT: The 16-character App Password you generated.
spring.mail.password=dnlz dijm uuub xhpw

# Required properties for secure connection to Gmail's SMTP server.
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Admin email for notifications
app.admin.email=${ADMIN_EMAIL:zenosvalkyre@gmail.com}


# =======================================
# FILE UPLOAD CONFIGURATION
# =======================================
# File upload directory - will use environment variable in production, local path for development
app.upload-dir=${UPLOAD_DIR:./uploads}

# Maximum file size allowed for uploads (5MB)
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB


# =======================================
# SECURITY CONFIGURATION (JWT)
# =======================================
# JWT secret key from environment variable with fallback
jwt.secret.key=${JWT_SECRET_KEY:YourSuperSecretKeyForJWTThatIsVeryLongAndSecure_ChangeThis!}


# =======================================
# DEBUGGING CONFIGURATION
# =======================================
# Enables detailed Spring Security logs for debugging 403 Forbidden errors.
logging.level.org.springframework.security=DEBUG